"use strict";(self.webpackChunkdatenschmutz_docs=self.webpackChunkdatenschmutz_docs||[]).push([[5138],{4137:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),m=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},c=function(t){var e=m(t.components);return n.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,d=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),s=m(a),h=r,u=s["".concat(d,".").concat(h)]||s[h]||p[h]||i;return a?n.createElement(u,l(l({ref:e},c),{},{components:a})):n.createElement(u,l({ref:e},c))}));function h(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=s;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},9028:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(7462),r=(a(7294),a(4137));const i={sidebar_position:6,sidebar_label:"Git",id:"git-cheat-sheet",description:"A comprehensive reference guide for Git commands, both basic and advanced.",slug:"/git-cheat-sheet",tags:["Cheat Sheet","Git","Versioning","Shortcuts"]},l="Git - Cheat Sheet",o={unversionedId:"git-cheat-sheet",id:"git-cheat-sheet",title:"Git - Cheat Sheet",description:"A comprehensive reference guide for Git commands, both basic and advanced.",source:"@site/cheat-sheets/git.md",sourceDirName:".",slug:"/git-cheat-sheet",permalink:"/cheat-sheets/git-cheat-sheet",draft:!1,editUrl:"https://github.com/datenschmutz/docs/tree/main/cheat-sheets/git.md",tags:[{label:"Cheat Sheet",permalink:"/cheat-sheets/tags/cheat-sheet"},{label:"Git",permalink:"/cheat-sheets/tags/git"},{label:"Versioning",permalink:"/cheat-sheets/tags/versioning"},{label:"Shortcuts",permalink:"/cheat-sheets/tags/shortcuts"}],version:"current",lastUpdatedBy:"Datenschmutz",lastUpdatedAt:1674665369,formattedLastUpdatedAt:"Jan 25, 2023",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"Git",id:"git-cheat-sheet",description:"A comprehensive reference guide for Git commands, both basic and advanced.",slug:"/git-cheat-sheet",tags:["Cheat Sheet","Git","Versioning","Shortcuts"]},sidebar:"tutorialSidebar",previous:{title:"Keyboard Shortcuts",permalink:"/cheat-sheets/keyboard-shortcuts"},next:{title:"Cisco CLI Commands",permalink:"/cheat-sheets/cisco-cli-commands"}},d={},m=[{value:"Basic Commands",id:"basic-commands",level:2},{value:"Branching",id:"branching",level:2},{value:"Advanced Commands",id:"advanced-commands",level:2}],c={toc:m};function p(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"git---cheat-sheet"},"Git - Cheat Sheet"),(0,r.kt)("p",null,"A comprehensive reference guide for Git commands, both basic and advanced."),(0,r.kt)("h2",{id:"basic-commands"},"Basic Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git init")),(0,r.kt)("td",{parentName:"tr",align:null},"Initialize a local Git repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git clone")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a local copy of a remote repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git add")),(0,r.kt)("td",{parentName:"tr",align:null},"Add a file to the staging area")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'git commit -m "message"')),(0,r.kt)("td",{parentName:"tr",align:null},"Commit the staged changes with a message")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git push")),(0,r.kt)("td",{parentName:"tr",align:null},"Push the committed changes to the remote repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git pull")),(0,r.kt)("td",{parentName:"tr",align:null},"Pull the latest changes from the remote repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git status")),(0,r.kt)("td",{parentName:"tr",align:null},"Check the status of the repository")))),(0,r.kt)("h2",{id:"branching"},"Branching"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch")),(0,r.kt)("td",{parentName:"tr",align:null},"List all local branches")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a new branch")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Switch to a different branch")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git merge <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Merge a branch into the current branch")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch -d <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Delete a branch")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git pull")),(0,r.kt)("td",{parentName:"tr",align:null},"Ziehen der letzten \xc4nderungen aus dem entfernten Repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git status")),(0,r.kt)("td",{parentName:"tr",align:null},"Status des Repositorys pr\xfcfen")))),(0,r.kt)("h2",{id:"advanced-commands"},"Advanced Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git stash")),(0,r.kt)("td",{parentName:"tr",align:null},"Stash the changes in a dirty working directory")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git log")),(0,r.kt)("td",{parentName:"tr",align:null},"View the commit history")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git diff")),(0,r.kt)("td",{parentName:"tr",align:null},"View the changes between commits, commit and working tree, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git reset <file>")),(0,r.kt)("td",{parentName:"tr",align:null},"Unstage a file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git cherry-pick <commit>")),(0,r.kt)("td",{parentName:"tr",align:null},"Apply the changes from a specific commit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git rebase <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Rebase the current branch onto another branch")))))}p.isMDXComponent=!0}}]);