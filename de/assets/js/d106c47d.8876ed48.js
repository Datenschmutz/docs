"use strict";(self.webpackChunkdatenschmutz_docs=self.webpackChunkdatenschmutz_docs||[]).push([[2863],{4137:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),c=o(n),u=r,h=c["".concat(s,".").concat(u)]||c[u]||p[u]||i;return n?a.createElement(h,l(l({ref:t},m),{},{components:n})):a.createElement(h,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var a=n(7462),r=(n(7294),n(4137));const i={sidebar_position:6,sidebar_label:"Git Cheat Sheet",id:"git-cheat-sheet",description:"Ein umfassendes Repertoire an Git-Befehlen, sowohl f\xfcr Anf\xe4nger als auch f\xfcr Fortgeschrittene.",slug:"/git-cheat-sheet",tags:["Cheat Sheet","Git","Versioning","Shortcuts","German/Deutsch"]},l="Git - Cheat Sheet",d={unversionedId:"git-cheat-sheet",id:"git-cheat-sheet",title:"Git - Cheat Sheet",description:"Ein umfassendes Repertoire an Git-Befehlen, sowohl f\xfcr Anf\xe4nger als auch f\xfcr Fortgeschrittene.",source:"@site/i18n/de/docusaurus-plugin-content-docs-cheat-sheets/current/git.md",sourceDirName:".",slug:"/git-cheat-sheet",permalink:"/de/cheat-sheets/git-cheat-sheet",draft:!1,editUrl:"https://github.com/datenschmutz/docs/tree/main/i18n/de/docusaurus-plugin-content-docs-cheat-sheets/current/git.md",tags:[{label:"Cheat Sheet",permalink:"/de/cheat-sheets/tags/cheat-sheet"},{label:"Git",permalink:"/de/cheat-sheets/tags/git"},{label:"Versioning",permalink:"/de/cheat-sheets/tags/versioning"},{label:"Shortcuts",permalink:"/de/cheat-sheets/tags/shortcuts"},{label:"German/Deutsch",permalink:"/de/cheat-sheets/tags/german-deutsch"}],version:"current",lastUpdatedBy:"Datenschmutz",lastUpdatedAt:1676726660,formattedLastUpdatedAt:"18. Feb. 2023",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"Git Cheat Sheet",id:"git-cheat-sheet",description:"Ein umfassendes Repertoire an Git-Befehlen, sowohl f\xfcr Anf\xe4nger als auch f\xfcr Fortgeschrittene.",slug:"/git-cheat-sheet",tags:["Cheat Sheet","Git","Versioning","Shortcuts","German/Deutsch"]},sidebar:"tutorialSidebar",previous:{title:"Tastatur Shortcuts | Win & Mac",permalink:"/de/cheat-sheets/keyboard-shortcuts"},next:{title:"Cisco CLI Commands",permalink:"/de/cheat-sheets/cisco-cli-commands"}},s={},o=[{value:"Basic Commands",id:"basic-commands",level:2},{value:"Branching",id:"branching",level:2},{value:"Advanced Commands",id:"advanced-commands",level:2}],m={toc:o};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"git---cheat-sheet"},"Git - Cheat Sheet"),(0,r.kt)("p",null,"Ein umfassendes Repertoire an Git-Befehlen, sowohl f\xfcr Anf\xe4nger als auch f\xfcr Fortgeschrittene."),(0,r.kt)("h2",{id:"basic-commands"},"Basic Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Befehl"),(0,r.kt)("th",{parentName:"tr",align:null},"Beschreibung"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git init")),(0,r.kt)("td",{parentName:"tr",align:null},"Initialisieren eines lokalen Git-Repositorys")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git clone")),(0,r.kt)("td",{parentName:"tr",align:null},"Erstellen einer lokalen Kopie eines entfernten Repositorys")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git add")),(0,r.kt)("td",{parentName:"tr",align:null},"Hinzuf\xfcgen einer Datei in den Staging-Bereich")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'git commit -m "message"')),(0,r.kt)("td",{parentName:"tr",align:null},"Commit der bereitgestellten \xc4nderungen mit einer Nachricht")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git push")),(0,r.kt)("td",{parentName:"tr",align:null},"Pushen der \xfcbertragenen \xc4nderungen in das entfernte Repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git pull")),(0,r.kt)("td",{parentName:"tr",align:null},"Ziehen der letzten \xc4nderungen aus dem entfernten Repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git status")),(0,r.kt)("td",{parentName:"tr",align:null},"Status des Repositorys pr\xfcfen")))),(0,r.kt)("h2",{id:"branching"},"Branching"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Befehl"),(0,r.kt)("th",{parentName:"tr",align:null},"Beschreibung"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch")),(0,r.kt)("td",{parentName:"tr",align:null},"Alle lokalen Branches auflisten")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Einen neuen Branch erstellen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Zu einem anderen Branch wechseln")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git merge <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Einen Branch mit dem aktuellen Branch zusammenf\xfchren")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch -d <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Einen Branch l\xf6schen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git pull")),(0,r.kt)("td",{parentName:"tr",align:null},"Ziehen der letzten \xc4nderungen aus dem entfernten Repository")))),(0,r.kt)("h2",{id:"advanced-commands"},"Advanced Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Befehl"),(0,r.kt)("th",{parentName:"tr",align:null},"Beschreibung"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git stash")),(0,r.kt)("td",{parentName:"tr",align:null},'Die \xc4nderungen in einem "schmutzigen" Arbeitsverzeichnis ablegen')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git log")),(0,r.kt)("td",{parentName:"tr",align:null},"Einsicht in die Commit-Historie")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git diff")),(0,r.kt)("td",{parentName:"tr",align:null},"Einsehen der \xc4nderungen zwischen Commits, Commit und Arbeitsbaum usw.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git reset <file>")),(0,r.kt)("td",{parentName:"tr",align:null},"Eine Datei unstagen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git cherry-pick <commit>")),(0,r.kt)("td",{parentName:"tr",align:null},"Die \xc4nderungen eines bestimmten Commits \xfcbernehmen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git rebase <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Den aktuellen Zweig auf einen anderen Zweig \xfcbertragen")))))}p.isMDXComponent=!0}}]);